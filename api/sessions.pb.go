// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sessions.proto

package api_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Session struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_sessions_528b2d78bd5533b4, []int{0}
}
func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (dst *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(dst, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type GetSessionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSessionRequest) Reset()         { *m = GetSessionRequest{} }
func (m *GetSessionRequest) String() string { return proto.CompactTextString(m) }
func (*GetSessionRequest) ProtoMessage()    {}
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sessions_528b2d78bd5533b4, []int{1}
}
func (m *GetSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSessionRequest.Unmarshal(m, b)
}
func (m *GetSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSessionRequest.Marshal(b, m, deterministic)
}
func (dst *GetSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSessionRequest.Merge(dst, src)
}
func (m *GetSessionRequest) XXX_Size() int {
	return xxx_messageInfo_GetSessionRequest.Size(m)
}
func (m *GetSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSessionRequest proto.InternalMessageInfo

type CreateSessionRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSessionRequest) Reset()         { *m = CreateSessionRequest{} }
func (m *CreateSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSessionRequest) ProtoMessage()    {}
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sessions_528b2d78bd5533b4, []int{2}
}
func (m *CreateSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSessionRequest.Unmarshal(m, b)
}
func (m *CreateSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSessionRequest.Marshal(b, m, deterministic)
}
func (dst *CreateSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSessionRequest.Merge(dst, src)
}
func (m *CreateSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSessionRequest.Size(m)
}
func (m *CreateSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSessionRequest proto.InternalMessageInfo

func (m *CreateSessionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateSessionRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type DeleteSessionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSessionRequest) Reset()         { *m = DeleteSessionRequest{} }
func (m *DeleteSessionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSessionRequest) ProtoMessage()    {}
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sessions_528b2d78bd5533b4, []int{3}
}
func (m *DeleteSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSessionRequest.Unmarshal(m, b)
}
func (m *DeleteSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSessionRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSessionRequest.Merge(dst, src)
}
func (m *DeleteSessionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSessionRequest.Size(m)
}
func (m *DeleteSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSessionRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Session)(nil), "com.github.ProgrammingLab.prolab_accounts.api.Session")
	proto.RegisterType((*GetSessionRequest)(nil), "com.github.ProgrammingLab.prolab_accounts.api.GetSessionRequest")
	proto.RegisterType((*CreateSessionRequest)(nil), "com.github.ProgrammingLab.prolab_accounts.api.CreateSessionRequest")
	proto.RegisterType((*DeleteSessionRequest)(nil), "com.github.ProgrammingLab.prolab_accounts.api.DeleteSessionRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SessionServiceClient is the client API for SessionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionServiceClient interface {
	GetSession(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*Session, error)
	CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*Session, error)
	DeleteSession(ctx context.Context, in *DeleteSessionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type sessionServiceClient struct {
	cc *grpc.ClientConn
}

func NewSessionServiceClient(cc *grpc.ClientConn) SessionServiceClient {
	return &sessionServiceClient{cc}
}

func (c *sessionServiceClient) GetSession(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/com.github.ProgrammingLab.prolab_accounts.api.SessionService/GetSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/com.github.ProgrammingLab.prolab_accounts.api.SessionService/CreateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) DeleteSession(ctx context.Context, in *DeleteSessionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.github.ProgrammingLab.prolab_accounts.api.SessionService/DeleteSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionServiceServer is the server API for SessionService service.
type SessionServiceServer interface {
	GetSession(context.Context, *GetSessionRequest) (*Session, error)
	CreateSession(context.Context, *CreateSessionRequest) (*Session, error)
	DeleteSession(context.Context, *DeleteSessionRequest) (*empty.Empty, error)
}

func RegisterSessionServiceServer(s *grpc.Server, srv SessionServiceServer) {
	s.RegisterService(&_SessionService_serviceDesc, srv)
}

func _SessionService_GetSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).GetSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.ProgrammingLab.prolab_accounts.api.SessionService/GetSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).GetSession(ctx, req.(*GetSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.ProgrammingLab.prolab_accounts.api.SessionService/CreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).CreateSession(ctx, req.(*CreateSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_DeleteSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).DeleteSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.ProgrammingLab.prolab_accounts.api.SessionService/DeleteSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).DeleteSession(ctx, req.(*DeleteSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SessionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.ProgrammingLab.prolab_accounts.api.SessionService",
	HandlerType: (*SessionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSession",
			Handler:    _SessionService_GetSession_Handler,
		},
		{
			MethodName: "CreateSession",
			Handler:    _SessionService_CreateSession_Handler,
		},
		{
			MethodName: "DeleteSession",
			Handler:    _SessionService_DeleteSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sessions.proto",
}

func init() { proto.RegisterFile("sessions.proto", fileDescriptor_sessions_528b2d78bd5533b4) }

var fileDescriptor_sessions_528b2d78bd5533b4 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x49, 0xdf, 0x97, 0xda, 0x8e, 0xb4, 0xd0, 0xb5, 0x94, 0x12, 0x15, 0x24, 0xa7, 0x52,
	0x70, 0x03, 0x0a, 0x1e, 0x3c, 0x89, 0xf5, 0x0f, 0x82, 0x07, 0x69, 0x6f, 0x5e, 0xca, 0x24, 0x1d,
	0xe3, 0x42, 0x93, 0x5d, 0xb3, 0x1b, 0xc5, 0x93, 0xe0, 0x57, 0xf0, 0xe4, 0xd5, 0x8f, 0xa4, 0x5f,
	0xc1, 0x0f, 0x22, 0x4d, 0xb7, 0x86, 0x6a, 0x2f, 0xf1, 0x96, 0x79, 0x66, 0xf2, 0xe4, 0x97, 0x67,
	0x06, 0x9a, 0x9a, 0xb4, 0x16, 0x32, 0xd1, 0x5c, 0xa5, 0xd2, 0x48, 0xb6, 0x1b, 0xca, 0x98, 0x47,
	0xc2, 0xdc, 0x66, 0x01, 0xbf, 0x4a, 0x65, 0x94, 0x62, 0x1c, 0x8b, 0x24, 0xba, 0xc4, 0x60, 0x36,
	0x30, 0xc5, 0x60, 0x8c, 0x61, 0x28, 0xb3, 0xc4, 0x68, 0x8e, 0x4a, 0xb8, 0x5b, 0x91, 0x94, 0xd1,
	0x94, 0x7c, 0x54, 0xc2, 0xc7, 0x24, 0x91, 0x06, 0x4d, 0x61, 0xe6, 0x6e, 0xda, 0x6e, 0x5e, 0x05,
	0xd9, 0x8d, 0x4f, 0xb1, 0x32, 0x8f, 0xf3, 0xa6, 0xd7, 0x83, 0xb5, 0xd1, 0xfc, 0xdb, 0x6c, 0x1b,
	0xc0, 0x62, 0x8c, 0xc5, 0xa4, 0xeb, 0xec, 0x38, 0xbd, 0xfa, 0xb0, 0x6e, 0x95, 0x8b, 0x89, 0xb7,
	0x01, 0xad, 0x73, 0x32, 0x76, 0x78, 0x48, 0x77, 0x19, 0x69, 0xe3, 0x9d, 0x41, 0x7b, 0x90, 0x12,
	0x1a, 0x5a, 0xd6, 0x19, 0x83, 0xff, 0x09, 0xc6, 0x64, 0x5d, 0xf2, 0x67, 0xe6, 0x42, 0x4d, 0xa1,
	0xd6, 0x0f, 0x32, 0x9d, 0x74, 0x2b, 0xb9, 0xfe, 0x5d, 0x7b, 0x1d, 0x68, 0x9f, 0xd0, 0x94, 0x7e,
	0xfa, 0xec, 0xbd, 0xff, 0x83, 0xa6, 0x95, 0x46, 0x94, 0xde, 0x8b, 0x90, 0xd8, 0xab, 0x03, 0x50,
	0x80, 0xb0, 0x23, 0x5e, 0x2a, 0x2b, 0xfe, 0xeb, 0x1f, 0xdc, 0x83, 0x92, 0x0e, 0xf6, 0x75, 0xaf,
	0xf5, 0xfc, 0xf1, 0xf9, 0x52, 0x59, 0x67, 0x75, 0x7f, 0xb1, 0x3d, 0xf6, 0xe6, 0x40, 0x63, 0x29,
	0x0f, 0x36, 0x28, 0x69, 0xbe, 0x2a, 0xcd, 0x3f, 0x13, 0xb6, 0x73, 0xc2, 0xa6, 0x57, 0x10, 0x1e,
	0x3a, 0x7d, 0xf6, 0x04, 0x8d, 0xa5, 0xac, 0x4b, 0x33, 0xae, 0xda, 0x94, 0xdb, 0xe1, 0xf3, 0x33,
	0xe3, 0x8b, 0x33, 0xe3, 0xa7, 0xb3, 0x33, 0x5b, 0xa4, 0xd4, 0x2f, 0x18, 0x8e, 0x6b, 0xd7, 0x55,
	0x54, 0x62, 0xac, 0x82, 0xa0, 0x9a, 0x0f, 0xef, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x8f, 0xfa,
	0x7f, 0xc8, 0x00, 0x03, 0x00, 0x00,
}
